<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearchProfil.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        5wAAAOcB8BtYtQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAN6SURBVFhH5ZZL
        SFRRGMenMG2dj6hNREqBGo6Wmc7oVCr5nE03xKAp6EHZA0vFFg2XNNLKkXzmq9JoitRF9thGkLVx5ZTR
        rmxTUUHSzD3nXOrrO7dPCKpxZq4V0W81/M+9c3985/VZ/klUFRbSz99PRg8sKj7LSp2NrE9xs6nKeu53
        HeOwp4rPHNjHp466WFdNBSuxWGABvTJ/5HVxpaCVPS9uZuBsYIACgAJgCBzigAJwZBeH45Uc6hXuc5dx
        J71qjsQ2iMnp44OOTgYoACjwsrxBO7VNDWQr1bBEPrOzCmIP7tWzUUBFgWkUALdTQGOx6FQdsNj4o0hI
        vAcxmYPsQU4fAxQIFHpYtaJCNA3/FPxg1AmFHUMBf0ORgOZ8fldmNBweVq82iAKAAm9yu4WV4pBQy8U6
        FHjdtEVAi130Uhw6qcMBBQUABQLZvSKN4rDAKViHAn4UgLYsPZ/iuZGrPXlEe24IXGHVFEdE02a9xhDY
        IJ5CqLtjzRgrTRnRAAVeSBmKI6InAxZ57PorFICeDN1GcXBWj2n9UiD9mqZSZIoWOz8lBS6miQ6KgoMC
        U1Igw6uFZjwH5226zRCwikcUBQcFPkmB5JsfjX1ulvMOiCOB9xT9Gsd9iEIBMCpgcv5naSuCGEMgXcxQ
        FBwUmDEW4XX/copM0bEFYqVAt1W8pSg4870GPHm6nQTGKQrO6ttal1EBr3aGIlN47Pw0rYEWioKTdIuV
        kMC047KJywSR848H0UujAml6DsVzALAABXx0FNdSGhHfnYQTFIVG6jB3koCW0xfIojgs6C7QUODzhQ36
        JopDJ90b6Jy9DfM6AhspDomTZWI93obv6DZspzg85PxnDrE71A+wglZe51CDrwlVgeh6hdViP6DJfsAQ
        sAlfdzYk0CPhIQ8mWz/r/a4jmsaWrGm7quVW1PmXo1DU7sMQX7Vfzz3q4g3YEb2ijuhLY5Fob94sfMYa
        yEKJtRFKSBxdLL/Aw56G2BNOuMu/zfm5QkiQFTC2YbrwDZmRkLtja5NmQ4EOxc0fo8AHFPiAAu9RYPyI
        S3hqd/y41c5h+WUF8ByAgRSUWGVGIkLa7BCPApMDyQKGkvRnV1fAMhr6c1yyQjwKTKIA3FihPxuN+0sS
        Q4n6JArA6LK/JOFdCUtR4AkKwFisHt4JOV9ICRSYGIvTH1L032OxfAWcOFN/8QETcwAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>